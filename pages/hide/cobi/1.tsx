// import type { NextPage } from 'next'
// import Head from 'next/head'
// import { useState } from 'react'
// import { prisma } from '../../lib/prisma'
// import { GetServerSideProps } from 'next'
// import { useRouter } from 'next/router'
// import { useForm } from './hook'; 
// import type { brand } from "@prisma/client";


// interface FormData {
//   id:string;
//   devname: string;
//   devid: string;
//   devtype: string;
//   deveui: string;
//   brandId: string;
// }

// // Array interface
// interface Iot {
//   iot: {
//     id:string;
//     devname: string;
//     devid: string;
//     devtype: string;
//     deveui: string;
//     brandId: string;
//   }[]
// }


// // Load mIot from getServerSideProps server side rendering
// const Cobi: NextPage<Iot & { brands: brand[]; noBrands: boolean  }> = ({ iot, brands, noBrands  }) => {
//   const { step, form, setForm, nextStep, prevStep, resetForm } = useForm();
//   const [newIot, setNewIot] = useState<Boolean>(true);
//   const router = useRouter();

//   const refreshData = () => {
//     router.replace(router.asPath)
//   }

//   async function handleSubmit(data: FormData) {
//     try {
//       if (newIot) {
//         if (data.devname) {
//           // CREATE
//           fetch('api/iotcreate', {
//             body: JSON.stringify(data),
//             headers: {
//               'Content-Type': 'application/json'
//             },
//             method: 'POST'
//           }).then(() => {
//             setForm({
//               id:0,
//               devname:'',
//               devid:'',
//               devtype:'',
//               deveui:'',
//               brandId:'',});
//             refreshData();
//             router.push('/iotdash'); // Redirect to the dashboard page
//           });
//         } else {
//           alert("Iot can not be blank");
//         }
//       } else {
//         // UPDATE
//         fetch(`api/iot/${data.id}`, {
//           body: JSON.stringify(data),
//           headers: {
//             'Content-Type': 'application/json',
//           },
//           method: 'PUT'
//         }).then(() => {
//           setForm({ 
//             id:0,
//             devname:'',
//             devid:'',
//             devtype:'',
//             deveui:'',
//             brandId:'',
//           });
//           setNewIot(true);
//           refreshData();
//           router.push('/Iotformmulticopy'); // Redirect to the dashboard page
//         });
//       }
//     } catch (error) {
//       console.log(error);
//     }
//   }

//   return (
//     <div className='bg-black'>
//       <Head>
//         <title>Asset Iot</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
      
//       {step === 1 && (
//         <form
//           className="w-auto min-w-[25%] max-w-min mx-auto space-y-6 flex flex-col items-stretch"
//           onSubmit={e => {
//             e.preventDefault();
//             if (form.devname && form.devid) {
//               // Proceed with the submission
              
//               nextStep();
//             } else {
//               // Show an alert message if inputs are missing
//               alert("Please fill in Part Name and Part ID fields.");
//             }
//           }}
//         >
//       <h1 className="text-center font-bold text-2xl m-4 text-white">Iot</h1>
//         <div className="form">
//             <div className="field field_v2">
//                 <label htmlFor="devname" className="w-1 h-1 p-0 border-0 absolute clip w-[1px] h-[1px] overflow-hidden">Iot Device Name </label>
//                 <input id="devname" type="text" 
//                     placeholder="Iot Device Name " 
//                     value={form.devname} 
//                     onChange={e => setForm({...form, devname: e.target.value})}
//                     className="field__input"></input>
//                 <span className="absolute inset-0 pointer-events-none cursor-text field__label-wrap">
//                     <span className="field__label">Iot Device Name </span>
//                 </span>
//             </div>

//             <div className="field field_v2">
//                 <label htmlFor="devid" className="w-1 h-1 p-0 border-0 absolute clip w-[1px] h-[1px] overflow-hidden">Iot Device ID</label>
//                 <input type="text" 
//                     placeholder="Iot device model id" 
//                     id="devid"
//                     value={form.devid} 
//                     onChange={e => setForm({...form, devid: e.target.value})} 
//                     className="field__input" ></input>
//                 <span className="field__label-wrap" aria-hidden="true">
//                     <span className="field__label">Iot Device ID</span>
//                 </span>
//             </div>
        
//             <label htmlFor="brandId" className="select_label">Brand</label>
//             <select
//                 id="part-select"
//                 value={form.brandId}
//                 onChange={(e) => setForm({ ...form, brandId: e.target.value })}
//                 required
//                 className="block py-2.5 px-0 w-full text-m text-gray-500 bg-transparent border-0 border-b-2 border-gray-200 appearance-none dark:text-white dark:border-gray-700 focus:outline-none focus:ring-0 focus:border-gray-200 peer placeholder-gray-400 text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
//             >
//                 <option className="bg-gray-600" value="">
//                 Choose a Brand
//                 </option>

//                 {brands.map((brand) => (
//                 <option
//                     key={brand.bid}
//                     value={brand.bid}
//                     className="bg-gray-600"
//                 >
//                     {brand.name}
//                 </option>
//                 ))}
//             </select>


         
//         <button type="submit" className="bg-blue-500 text-white rounded p-1">
//             Next
//         </button>
//         </div>
//         <br/>
//       </form>
//       )}


// {step === 2 && (
//   <form
//   className="w-auto min-w-[30%] max-w-min mx-auto space-y-6 flex flex-col items-stretch"
//   onSubmit={e => {
//     e.preventDefault();
//     if (form.brandId) {
//       // Proceed with the submission
//       handleSubmit(form); // This handles both create and update
//       nextStep();
//       prevStep();
//     } else {
//       // Show an alert message if inputs are missing
//       alert("Please fill in Quantity and Description fields.");
//     }
//   }}
// >

//     <h1 className="text-center font-bold text-2xl m-4 text-white">Part</h1>
        
//     <div className="">
//             <br></br>
//                 <label htmlFor="devtype" className="select_label">Type</label>
//                 <br></br>
//                 <select className="option" id="devtype" value={form.devtype} 
//                     onChange={e => setForm({...form, devtype: e.target.value})}>
//                     <option value="">Select Option</option>
//                     <option value="Modbus Interface Device for Meter">Modbus Interface Device for Meter</option>
//                     <option value="Modbus Interface Device for Equipment">Modbus Interface Device for Equipment</option>
//                     <option value="Water Leak Sensor">Water Leak Sensor</option>
//                     <option value="IAQ Device">IAQ Device</option>
//                     <option value="Sound Level">Sound Level</option>
//                     <option value="Environmental Gas Sensor">Environmental Gas Sensor</option>
//                     <option value="People Counting Sensor">People Counting Sensor</option>
//                     <option value="Occupancy Sensor">Occupancy Sensor</option>
//                 </select>

//             </div>

//             <br></br>

//             <div className="field field_v2">
//                 <label htmlFor="deveui" className="w-1 h-1 p-0 border-0 absolute clip w-[1px] h-[1px] overflow-hidden">Iot Device EUI</label>
//                 <input type="text" 
//                     placeholder="Enter Iot device EUI" 
//                     id="deveui"
//                     value={form.deveui} 
//                     onChange={e => setForm({...form, deveui: e.target.value})} 
//                     className="field__input" ></input>
//                 <span className="field__label-wrap" aria-hidden="true">
//                     <span className="field__label">Iot Device EUI</span>
//                 </span>
//             </div>
    
//     <button
//       type="submit"
//       className="bg-blue-500 text-white rounded p-1"
//     >
//       Submit
//     </button>
//     <button
//       type="button"
//       onClick={prevStep}
//       className="bg-gray-400 text-white rounded p-1"
//     >
//       Back
//     </button>
//   </form>
// )}
//   </div>
//   );
// }

// export default Cobi

// export const getServerSideProps: GetServerSideProps = async () => {
//   // READ all miot from DB
//   const iots = await prisma?.iot.findMany({
//     select: {
//       id: true,
//       devname: true,
//       devid: true,
//       devtype: true,
//       deveui: true,
//       brandId: true,
//       brand: true,
//     },
//   });

//   const brands = await prisma?.brand.findMany({
//     select: {
//       id: true,
//       name: true,
//       bid: true,
//     },
//   });

//   // Check if the parts array is empty
//   const noBrands = brands.length === 0;
  

//   return {
//     props: {
//       brands: brands || [],
//       noBrands: noBrands, // Add a flag to indicate if there are no parts
//     },
//   };
// };

